# PostgreSQL. Versions 8.2 and up are supported.
#
# Install the pg driver:
#   gem install pg
# On OS X with Homebrew:
#   gem install pg -- --with-pg-config=/usr/local/bin/pg_config
# On OS X with MacPorts:
#   gem install pg -- --with-pg-config=/opt/local/lib/postgresql84/bin/pg_config
# On Windows:
#   gem install pg
#       Choose the win32 build.
#       Install PostgreSQL and put its /bin directory on your path.
#
# Configure Using Gemfile
# gem 'pg'
#

# DATABASE_URL environment variable should determine connection params

default: &default
  encoding: unicode
  adapter: postgresql
  # For details on connection pooling, see rails configuration guide
  # http://guides.rubyonrails.org/configuring.html#database-pooling
  pool: 5
  schema_search_path: quran,"$user",content,audio,i18n,public

production:
  <<: *default
  adapter: postgresql
  encoding: unicode
  host: <%= ENV['POSTGRES_PORT_5432_TCP_ADDR'] %>
  port: <%= ENV['POSTGRES_PORT_5432_TCP_PORT'] %>
  database: quran_dev
  username: quran_dev
  password: dev_quran
  pool: <%= ENV.fetch('RAILS_MAX_THREADS'){5} %>

staging:
  <<: *default
  adapter: postgresql
  encoding: unicode
  host: <%= ENV['POSTGRES_PORT_5432_TCP_ADDR'] %>
  port: <%= ENV['POSTGRES_PORT_5432_TCP_PORT'] %>
  database: quran_dev
  username: quran_dev
  password: dev_quran

development:
  <<: *default
  host: localhost
  username: postgres
  password: postgres
  database: quran_dev



# We are not clearing db in test environment, its kind of safe to use dev db for test
test:
  <<: *default
  host: localhost
  username: postgres
  password: postgres
  database: quran_test

